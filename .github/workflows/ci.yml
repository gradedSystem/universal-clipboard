name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.json'
      - '**/*.log'
      - '**/*.ini'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.json'
      - '**/*.log'
      - '**/*.ini'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        python -m pytest

  build-windows:
    needs: test
    runs-on: windows-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[windows]"
        pip install cx_Freeze
    
    - name: Build Windows executable
      run: |
        cd windows_client
        python setup.py build
    
    - name: Get version
      id: get_version
      run: |
        $version = (Get-Content version.txt).Trim()
        echo "version=$version" >> $env:GITHUB_OUTPUT
    
    - name: Configure Git
      if: github.event_name == 'push'
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
    
    - name: Create tag
      if: github.event_name == 'push'
      uses: mathiasvr/command-output@v1
      id: tag
      with:
        run: |
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"
    
    - name: Create release
      if: github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Universal Clipboard v${{ steps.get_version.outputs.version }}
        body: |
          Windows executable for Universal Clipboard v${{ steps.get_version.outputs.version }}
          
          ## Changes
          - Initial release
        files: windows_client/build/exe.win-amd64-3.11/UniversalClipboard.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
